// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SecurityEssentials.Acceptance.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Account")]
    [NUnit.Framework.CategoryAttribute("CheckForErrors")]
    public partial class AccountFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Account.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Account", "\tIn order to securely access the application\r\n\tAs a user\r\n\tI want to be manage my" +
                    " account", ProgrammingLanguage.CSharp, new string[] {
                        "CheckForErrors"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line 8
 testRunner.Given("I delete all cookies from the cache", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.And("I clear down the database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And("I have the standard set of lookups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When I enter correct login details I am taken to the landing page")]
        public virtual void WhenIEnterCorrectLoginDetailsIAmTakenToTheLandingPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When I enter correct login details I am taken to the landing page", null, ((string[])(null)));
#line 12
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "FirstName",
                        "LastName",
                        "Password",
                        "SecurityQuestion",
                        "SecurityAnswer",
                        "PasswordResetToken",
                        "PasswordResetExpiry",
                        "NewEmailAddress",
                        "NewEmailAddressToken",
                        "NewEmailAddressRequestExpiryDate"});
            table1.AddRow(new string[] {
                        "user@test.net",
                        "Standard",
                        "User",
                        "x12a;pP02icdjshER",
                        "What is the name of your first pet?",
                        "Mr Miggins",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 13
 testRunner.Given("the following users are setup in the database:", ((string)(null)), table1, "Given ");
#line 16
 testRunner.And("I navigate to the website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.And("I am taken to the homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("I click the login link in the navigation bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.And("I am navigated to the \'login\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "UserName",
                        "user@test.net"});
            table2.AddRow(new string[] {
                        "Password",
                        "x12a;pP02icdjshER"});
#line 20
 testRunner.And("I enter the following login data:", ((string)(null)), table2, "And ");
#line 24
 testRunner.When("I click the login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.Then("I am navigated to the \'Landing\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 26
 testRunner.And("the following last activity message is shown: \'the last activity logged against y" +
                    "our account was\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table3.AddRow(new string[] {
                        "User Logged On"});
#line 27
 testRunner.And("I have the following user logs in the system:", ((string)(null)), table3, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When I enter incorrect login details then a warning is displayed")]
        [NUnit.Framework.CategoryAttribute("PAT")]
        public virtual void WhenIEnterIncorrectLoginDetailsThenAWarningIsDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When I enter incorrect login details then a warning is displayed", null, new string[] {
                        "PAT"});
#line 32
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "FirstName",
                        "LastName",
                        "Password",
                        "SecurityQuestion",
                        "SecurityAnswer",
                        "PasswordResetToken",
                        "PasswordResetExpiry",
                        "NewEmailAddress",
                        "NewEmailAddressToken",
                        "NewEmailAddressRequestExpiryDate"});
            table4.AddRow(new string[] {
                        "user@test.net",
                        "Standard",
                        "User",
                        "x12a;pP02icdjshER",
                        "What is the name of your first pet?",
                        "Mr Miggins",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 33
 testRunner.Given("the following users are setup in the database:", ((string)(null)), table4, "Given ");
#line 36
 testRunner.And("I navigate to the website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.And("I am taken to the homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.And("I click the login link in the navigation bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("I am navigated to the \'login\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "UserName",
                        "user@test.net"});
            table5.AddRow(new string[] {
                        "Password",
                        "y12a;pP02icdjshET"});
#line 40
 testRunner.And("I enter the following login data:", ((string)(null)), table5, "And ");
#line 44
 testRunner.When("I click the login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table6.AddRow(new string[] {
                        "Invalid credentials or the account is locked"});
#line 45
 testRunner.Then("The following errors are displayed on the \'Login\' page:", ((string)(null)), table6, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table7.AddRow(new string[] {
                        "Failed Logon attempt"});
#line 48
 testRunner.And("I have the following user logs in the system:", ((string)(null)), table7, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When I enter valid registration details I can register a new user")]
        [NUnit.Framework.CategoryAttribute("PAT")]
        [NUnit.Framework.CategoryAttribute("Smoke")]
        public virtual void WhenIEnterValidRegistrationDetailsICanRegisterANewUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When I enter valid registration details I can register a new user", null, new string[] {
                        "PAT",
                        "Smoke"});
#line 53
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 54
 testRunner.Given("I navigate to the website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 55
 testRunner.And("I click register in the title bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.And("I am navigated to the \'Register\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "Username",
                        "test@test.net"});
            table8.AddRow(new string[] {
                        "FirstName",
                        "Tester1"});
            table8.AddRow(new string[] {
                        "LastName",
                        "Tester2"});
            table8.AddRow(new string[] {
                        "SecurityQuestion",
                        "What is your mother\'s maiden name?"});
            table8.AddRow(new string[] {
                        "SecurityAnswer",
                        "Bloggs"});
            table8.AddRow(new string[] {
                        "Password",
                        "Test456789££2123435"});
            table8.AddRow(new string[] {
                        "ConfirmPassword",
                        "Test456789££2123435"});
#line 57
 testRunner.And("I enter the following registration details:", ((string)(null)), table8, "And ");
#line 66
 testRunner.When("I submit my registration details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 67
 testRunner.Then("I am navigated to the \'Register Success\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table9.AddRow(new string[] {
                        "Account Created"});
#line 68
 testRunner.And("I have the following user logs in the system:", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "HashStrategy",
                        "Enabled",
                        "Approved",
                        "EmailVerified",
                        "FirstName",
                        "LastName"});
            table10.AddRow(new string[] {
                        "test@test.net",
                        "Pbkdf28000Iterations",
                        "True",
                        "True",
                        "False",
                        "Tester1",
                        "Tester2"});
#line 71
 testRunner.And("I have the following users in the system:", ((string)(null)), table10, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When I enter valid registration details with a pwned password, an error is displa" +
            "yed")]
        public virtual void WhenIEnterValidRegistrationDetailsWithAPwnedPasswordAnErrorIsDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When I enter valid registration details with a pwned password, an error is displa" +
                    "yed", null, ((string[])(null)));
#line 76
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 77
 testRunner.Given("I navigate to the website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 78
 testRunner.And("I click register in the title bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.And("I am navigated to the \'Register\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "Username",
                        "test@test.net"});
            table11.AddRow(new string[] {
                        "FirstName",
                        "Tester1"});
            table11.AddRow(new string[] {
                        "LastName",
                        "Tester2"});
            table11.AddRow(new string[] {
                        "SecurityQuestion",
                        "What is your mother\'s maiden name?"});
            table11.AddRow(new string[] {
                        "SecurityAnswer",
                        "Bloggs"});
            table11.AddRow(new string[] {
                        "Password",
                        "Password12345"});
            table11.AddRow(new string[] {
                        "ConfirmPassword",
                        "Password12345"});
#line 80
 testRunner.And("I enter the following registration details:", ((string)(null)), table11, "And ");
#line 89
 testRunner.When("I submit my registration details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table12.AddRow(new string[] {
                        "Your password has previously been found in a data breach, please choose another"});
#line 90
 testRunner.Then("The following errors are displayed on the \'Register\' page:", ((string)(null)), table12, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
#line 93
 testRunner.And("I have the following user logs in the system:", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "HashStrategy",
                        "Enabled",
                        "Approved",
                        "EmailVerified",
                        "FirstName",
                        "LastName"});
#line 95
 testRunner.And("I have the following users in the system:", ((string)(null)), table14, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When I enter registration details which are currently being used I am advised of " +
            "registration success")]
        [NUnit.Framework.CategoryAttribute("PAT")]
        public virtual void WhenIEnterRegistrationDetailsWhichAreCurrentlyBeingUsedIAmAdvisedOfRegistrationSuccess()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When I enter registration details which are currently being used I am advised of " +
                    "registration success", null, new string[] {
                        "PAT"});
#line 99
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "FirstName",
                        "LastName",
                        "Password",
                        "SecurityQuestion",
                        "SecurityAnswer",
                        "PasswordResetToken",
                        "PasswordResetExpiry",
                        "NewEmailAddress",
                        "NewEmailAddressToken",
                        "NewEmailAddressRequestExpiryDate"});
            table15.AddRow(new string[] {
                        "user@test.net",
                        "Standard",
                        "User",
                        "x12a;pP02icdjshER",
                        "What is the name of your first pet?",
                        "Mr Miggins",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 100
 testRunner.Given("the following users are setup in the database:", ((string)(null)), table15, "Given ");
#line 103
 testRunner.And("I navigate to the website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
 testRunner.And("I click register in the title bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
 testRunner.And("I am navigated to the \'Register\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table16.AddRow(new string[] {
                        "Username",
                        "user@test.net"});
            table16.AddRow(new string[] {
                        "FirstName",
                        "Standard2"});
            table16.AddRow(new string[] {
                        "LastName",
                        "User2"});
            table16.AddRow(new string[] {
                        "SecurityQuestion",
                        "What is the name of your first pet?"});
            table16.AddRow(new string[] {
                        "SecurityAnswer",
                        "Mr Miggins"});
            table16.AddRow(new string[] {
                        "Password",
                        "x12a;pP02icdjshER"});
            table16.AddRow(new string[] {
                        "ConfirmPassword",
                        "x12a;pP02icdjshER"});
#line 106
 testRunner.And("I enter the following registration details:", ((string)(null)), table16, "And ");
#line 115
 testRunner.When("I submit my registration details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 116
 testRunner.Then("I am navigated to the \'Register Success\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "HashStrategy",
                        "Enabled",
                        "Approved",
                        "EmailVerified",
                        "FirstName",
                        "LastName"});
            table17.AddRow(new string[] {
                        "user@test.net",
                        "Pbkdf28000Iterations",
                        "True",
                        "True",
                        "True",
                        "Standard",
                        "User"});
#line 117
 testRunner.And("I have the following users in the system:", ((string)(null)), table17, "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
#line 120
 testRunner.And("I have the following user logs in the system:", ((string)(null)), table18, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When I attempt password recovery using a valid account I am notified of success")]
        [NUnit.Framework.CategoryAttribute("PAT")]
        [NUnit.Framework.CategoryAttribute("Smoke")]
        public virtual void WhenIAttemptPasswordRecoveryUsingAValidAccountIAmNotifiedOfSuccess()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When I attempt password recovery using a valid account I am notified of success", null, new string[] {
                        "PAT",
                        "Smoke"});
#line 125
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "FirstName",
                        "LastName",
                        "Password",
                        "SecurityQuestion",
                        "SecurityAnswer",
                        "PasswordResetToken",
                        "PasswordResetExpiry",
                        "NewEmailAddress",
                        "NewEmailAddressToken",
                        "NewEmailAddressRequestExpiryDate"});
            table19.AddRow(new string[] {
                        "user@test.net",
                        "Standard",
                        "User",
                        "x12a;pP02icdjshER",
                        "What is the name of your first pet?",
                        "Mr Miggins",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 126
 testRunner.Given("the following users are setup in the database:", ((string)(null)), table19, "Given ");
#line 129
 testRunner.And("I navigate to the website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
 testRunner.And("I click the login link in the navigation bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
 testRunner.And("I am navigated to the \'Login\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
 testRunner.And("I click recover password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
 testRunner.And("I am navigated to the \'Recover\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table20.AddRow(new string[] {
                        "UserName",
                        "user@test.net"});
#line 134
 testRunner.And("I enter the following recover data:", ((string)(null)), table20, "And ");
#line 137
 testRunner.When("I submit the recover form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
 testRunner.Then("I am navigated to the \'Recover Success\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "HashStrategy",
                        "Enabled",
                        "Approved",
                        "EmailVerified",
                        "FirstName",
                        "LastName"});
            table21.AddRow(new string[] {
                        "user@test.net",
                        "Pbkdf28000Iterations",
                        "True",
                        "True",
                        "True",
                        "Standard",
                        "User"});
#line 139
 testRunner.And("I have the following users in the system:", ((string)(null)), table21, "And ");
#line 142
 testRunner.And("the user \'user@test.net\' has the password reset token set and password reset expi" +
                    "ry is at least 14 minutes from now", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table22.AddRow(new string[] {
                        "Password reset link generated and sent"});
#line 143
 testRunner.And("I have the following user logs in the system:", ((string)(null)), table22, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When I attempt password recovery using an invalid account I am notified of succes" +
            "s")]
        [NUnit.Framework.CategoryAttribute("PAT")]
        public virtual void WhenIAttemptPasswordRecoveryUsingAnInvalidAccountIAmNotifiedOfSuccess()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When I attempt password recovery using an invalid account I am notified of succes" +
                    "s", null, new string[] {
                        "PAT"});
#line 149
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 150
 testRunner.Given("I navigate to the website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 151
 testRunner.And("I click the login link in the navigation bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
 testRunner.And("I am navigated to the \'Login\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
 testRunner.And("I click recover password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
 testRunner.And("I am navigated to the \'Recover\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table23.AddRow(new string[] {
                        "UserName",
                        "Bogus@bogus.com"});
#line 155
 testRunner.And("I enter the following recover data:", ((string)(null)), table23, "And ");
#line 158
 testRunner.When("I submit the recover form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 159
 testRunner.Then("I am navigated to the \'Recover Success\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
#line 160
 testRunner.And("I have the following user logs in the system:", ((string)(null)), table24, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When I click on a valid password reset link, I can enter my security information " +
            "and change my password")]
        [NUnit.Framework.CategoryAttribute("PAT")]
        public virtual void WhenIClickOnAValidPasswordResetLinkICanEnterMySecurityInformationAndChangeMyPassword()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When I click on a valid password reset link, I can enter my security information " +
                    "and change my password", null, new string[] {
                        "PAT"});
#line 164
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "FirstName",
                        "LastName",
                        "Password",
                        "SecurityQuestion",
                        "SecurityAnswer",
                        "PasswordResetToken",
                        "PasswordResetExpiry",
                        "NewEmailAddress",
                        "NewEmailAddressToken",
                        "NewEmailAddressRequestExpiryDate"});
            table25.AddRow(new string[] {
                        "user2@test.net",
                        "Standard",
                        "User",
                        "x12a;pP02icdjshER",
                        "What is the name of your first pet?",
                        "Mr Miggins",
                        "83ababb4-a0c1-4f2c-8593-32dd40b920d2",
                        "[One day from now]",
                        "",
                        "",
                        ""});
#line 165
 testRunner.Given("the following users are setup in the database:", ((string)(null)), table25, "Given ");
#line 168
 testRunner.And("I have 0 entry(ies) in the password history table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
 testRunner.And("I navigate to the password reset link with token \'83ababb4-a0c1-4f2c-8593-32dd40b" +
                    "920d2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
 testRunner.And("I am navigated to the \'Recover Password\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table26.AddRow(new string[] {
                        "SecurityAnswer",
                        "Mr Miggins"});
            table26.AddRow(new string[] {
                        "Password",
                        "NewPassword45678"});
            table26.AddRow(new string[] {
                        "Confirm Password",
                        "NewPassword45678"});
#line 171
 testRunner.And("I enter the following recover password data:", ((string)(null)), table26, "And ");
#line 176
 testRunner.When("I submit the recover passord form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 177
 testRunner.Then("I am navigated to the \'Recover Password Success\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "HashStrategy",
                        "Enabled",
                        "Approved",
                        "EmailVerified",
                        "FirstName",
                        "LastName"});
            table27.AddRow(new string[] {
                        "user2@test.net",
                        "Pbkdf28000Iterations",
                        "True",
                        "True",
                        "True",
                        "Standard",
                        "User"});
#line 178
 testRunner.And("I have the following users in the system:", ((string)(null)), table27, "And ");
#line 181
 testRunner.And("the password reset token and expiry for user \'user2@test.net\' are not set", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table28.AddRow(new string[] {
                        "User Logged On"});
            table28.AddRow(new string[] {
                        "Password changed using token"});
#line 182
 testRunner.And("I have the following user logs in the system:", ((string)(null)), table28, "And ");
#line 186
 testRunner.And("I have 1 entry(ies) in the password history table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("I can change my password")]
        [NUnit.Framework.CategoryAttribute("PAT")]
        public virtual void ICanChangeMyPassword()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I can change my password", null, new string[] {
                        "PAT"});
#line 190
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "FirstName",
                        "LastName",
                        "Password",
                        "SecurityQuestion",
                        "SecurityAnswer",
                        "PasswordResetToken",
                        "PasswordResetExpiry",
                        "NewEmailAddress",
                        "NewEmailAddressToken",
                        "NewEmailAddressRequestExpiryDate"});
            table29.AddRow(new string[] {
                        "user3@test.net",
                        "Standard",
                        "User",
                        "x12a;pP02icdjshER",
                        "What is the name of your first pet?",
                        "Mr Miggins",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 191
 testRunner.Given("the following users are setup in the database:", ((string)(null)), table29, "Given ");
#line 194
 testRunner.And("I have 0 entry(ies) in the password history table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
 testRunner.And("I make a note of the password and salt for \'user3@test.net\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
 testRunner.And("I navigate to the website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
 testRunner.And("I click the login link in the navigation bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
 testRunner.And("I am navigated to the \'Login\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table30.AddRow(new string[] {
                        "UserName",
                        "user3@test.net"});
            table30.AddRow(new string[] {
                        "Password",
                        "x12a;pP02icdjshER"});
#line 199
 testRunner.And("I enter the following login data:", ((string)(null)), table30, "And ");
#line 203
 testRunner.And("I click the login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 204
 testRunner.And("I am navigated to the \'Landing\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 205
 testRunner.And("I select Admin -> Change Password from the menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 206
 testRunner.And("I am navigated to the \'Change Password\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table31.AddRow(new string[] {
                        "CurrentPassword",
                        "x12a;pP02icdjshER"});
            table31.AddRow(new string[] {
                        "NewPassword",
                        "NewPassword45678"});
            table31.AddRow(new string[] {
                        "ConfirmNewPassword",
                        "NewPassword45678"});
#line 207
 testRunner.And("I enter the following change password data:", ((string)(null)), table31, "And ");
#line 212
 testRunner.When("I submit the change password form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 213
 testRunner.Then("I am navigated to the \'Change Password Success\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 214
 testRunner.And("The password for \'user3@test.net\' has changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table32.AddRow(new string[] {
                        "User Logged On"});
            table32.AddRow(new string[] {
                        "Password changed"});
            table32.AddRow(new string[] {
                        "User Logged Off"});
#line 215
 testRunner.And("I have the following user logs in the system:", ((string)(null)), table32, "And ");
#line 220
 testRunner.And("I have 1 entry(ies) in the password history table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("I can change my email address")]
        [NUnit.Framework.CategoryAttribute("PAT")]
        public virtual void ICanChangeMyEmailAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I can change my email address", null, new string[] {
                        "PAT"});
#line 225
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "FirstName",
                        "LastName",
                        "Password",
                        "SecurityQuestion",
                        "SecurityAnswer",
                        "PasswordResetToken",
                        "PasswordResetExpiry",
                        "NewEmailAddress",
                        "NewEmailAddressToken",
                        "NewEmailAddressRequestExpiryDate"});
            table33.AddRow(new string[] {
                        "user5@test.net",
                        "Standard",
                        "User",
                        "x12a;pP02icdjshER",
                        "What is the name of your first pet?",
                        "Mr Miggins",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 226
 testRunner.Given("the following users are setup in the database:", ((string)(null)), table33, "Given ");
#line 229
 testRunner.And("I navigate to the website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 230
 testRunner.And("I click the login link in the navigation bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 231
 testRunner.And("I am navigated to the \'Login\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table34.AddRow(new string[] {
                        "UserName",
                        "user5@test.net"});
            table34.AddRow(new string[] {
                        "Password",
                        "x12a;pP02icdjshER"});
#line 232
 testRunner.And("I enter the following login data:", ((string)(null)), table34, "And ");
#line 236
 testRunner.And("I click the login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 237
 testRunner.And("I am navigated to the \'Landing\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 238
 testRunner.And("I select Admin -> Change Email Address from the menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 239
 testRunner.And("I am navigated to the \'Change email address\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table35.AddRow(new string[] {
                        "Password",
                        "x12a;pP02icdjshER"});
            table35.AddRow(new string[] {
                        "NewEmailAddress",
                        "joe@test.net"});
#line 240
 testRunner.And("I enter the following change email address data:", ((string)(null)), table35, "And ");
#line 244
 testRunner.When("I submit the change email address form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 245
 testRunner.Then("I am navigated to the \'Change Email Address Pending\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "HashStrategy",
                        "Enabled",
                        "Approved",
                        "EmailVerified",
                        "FirstName",
                        "LastName"});
            table36.AddRow(new string[] {
                        "user5@test.net",
                        "Pbkdf28000Iterations",
                        "True",
                        "True",
                        "True",
                        "Standard",
                        "User"});
#line 246
 testRunner.And("I have the following users in the system:", ((string)(null)), table36, "And ");
#line 249
 testRunner.And("the user \'user5@test.net\' has the new email address token set and new email addre" +
                    "ss expiry is at least 14 minutes from now", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table37.AddRow(new string[] {
                        "User Logged On"});
            table37.AddRow(new string[] {
                        "Change email address request started to change from user5@test.net to joe@test.ne" +
                            "t"});
#line 250
 testRunner.And("I have the following user logs in the system:", ((string)(null)), table37, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When I click on a valid change email address link, I change my email address to a" +
            " new one")]
        [NUnit.Framework.CategoryAttribute("PAT")]
        public virtual void WhenIClickOnAValidChangeEmailAddressLinkIChangeMyEmailAddressToANewOne()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When I click on a valid change email address link, I change my email address to a" +
                    " new one", null, new string[] {
                        "PAT"});
#line 257
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "FirstName",
                        "LastName",
                        "Password",
                        "SecurityQuestion",
                        "SecurityAnswer",
                        "PasswordResetToken",
                        "PasswordResetExpiry",
                        "NewEmailAddress",
                        "NewEmailAddressToken",
                        "NewEmailAddressRequestExpiryDate"});
            table38.AddRow(new string[] {
                        "user4@test.net",
                        "Standard",
                        "User",
                        "x12a;pP02icdjshER",
                        "What is the name of your first pet?",
                        "Mr Miggins",
                        "",
                        "",
                        "samuel@test.net",
                        "B386B07A-FF0C-4B2B-9DAD-7D32CFD5A92F",
                        "[One day from now]"});
#line 258
 testRunner.Given("the following users are setup in the database:", ((string)(null)), table38, "Given ");
#line 261
 testRunner.When("I navigate to the change email address link with token \'B386B07A-FF0C-4B2B-9DAD-7" +
                    "D32CFD5A92F\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 262
 testRunner.Then("I am navigated to the \'Change Email Address Success\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "HashStrategy",
                        "Enabled",
                        "Approved",
                        "EmailVerified",
                        "FirstName",
                        "LastName"});
            table39.AddRow(new string[] {
                        "samuel@test.net",
                        "Pbkdf28000Iterations",
                        "True",
                        "True",
                        "True",
                        "Standard",
                        "User"});
#line 263
 testRunner.And("I have the following users in the system:", ((string)(null)), table39, "And ");
#line 266
 testRunner.And("the user \'samuel@test.net\' has the new email address token and expiry cleared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table40.AddRow(new string[] {
                        "Change email address request confirmed to change from user4@test.net to samuel@te" +
                            "st.net"});
#line 267
 testRunner.And("I have the following user logs in the system:", ((string)(null)), table40, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("I can change my security information")]
        [NUnit.Framework.CategoryAttribute("PAT")]
        public virtual void ICanChangeMySecurityInformation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I can change my security information", null, new string[] {
                        "PAT"});
#line 274
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "FirstName",
                        "LastName",
                        "Password",
                        "SecurityQuestion",
                        "SecurityAnswer",
                        "PasswordResetToken",
                        "PasswordResetExpiry",
                        "NewEmailAddress",
                        "NewEmailAddressToken",
                        "NewEmailAddressRequestExpiryDate"});
            table41.AddRow(new string[] {
                        "user3@test.net",
                        "Standard",
                        "User",
                        "x12a;pP02icdjshER",
                        "What is the name of your first pet?",
                        "Mr Miggins",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 275
 testRunner.Given("the following users are setup in the database:", ((string)(null)), table41, "Given ");
#line 278
 testRunner.And("I make a note of the security information and salt for user \'user3@test.net\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 279
 testRunner.And("I navigate to the website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 280
 testRunner.And("I click the login link in the navigation bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 281
 testRunner.And("I am navigated to the \'Login\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table42.AddRow(new string[] {
                        "UserName",
                        "user3@test.net"});
            table42.AddRow(new string[] {
                        "Password",
                        "x12a;pP02icdjshER"});
#line 282
 testRunner.And("I enter the following login data:", ((string)(null)), table42, "And ");
#line 286
 testRunner.And("I click the login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 287
 testRunner.And("I am navigated to the \'Landing\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 288
 testRunner.And("I select Admin -> Change Security Information from the menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 289
 testRunner.And("I am navigated to the \'Change security Information\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table43.AddRow(new string[] {
                        "Password",
                        "x12a;pP02icdjshER"});
            table43.AddRow(new string[] {
                        "SecurityQuestion",
                        "What was your childhood nickname?"});
            table43.AddRow(new string[] {
                        "SecurityAnswer",
                        "Adelweiss"});
            table43.AddRow(new string[] {
                        "SecurityAnswerConfirm",
                        "Adelweiss"});
#line 290
 testRunner.And("I enter the following change security information data:", ((string)(null)), table43, "And ");
#line 296
 testRunner.When("I submit the change security information form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 297
 testRunner.Then("I am navigated to the \'Change Security Information Success\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "HashStrategy",
                        "Enabled",
                        "Approved",
                        "EmailVerified",
                        "FirstName",
                        "LastName",
                        "SecurityQuestionLookupItemId"});
            table44.AddRow(new string[] {
                        "user3@test.net",
                        "Pbkdf28000Iterations",
                        "True",
                        "True",
                        "True",
                        "Standard",
                        "User",
                        "What was your childhood nickname?"});
#line 298
 testRunner.And("I have the following users in the system:", ((string)(null)), table44, "And ");
#line 301
 testRunner.And("The security information for \'user3@test.net\' has changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table45.AddRow(new string[] {
                        "User Logged On"});
            table45.AddRow(new string[] {
                        "User Changed Security Information"});
#line 302
 testRunner.And("I have the following user logs in the system:", ((string)(null)), table45, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("I can view my user activity log information")]
        [NUnit.Framework.CategoryAttribute("PAT")]
        public virtual void ICanViewMyUserActivityLogInformation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I can view my user activity log information", null, new string[] {
                        "PAT"});
#line 309
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "FirstName",
                        "LastName",
                        "Password",
                        "SecurityQuestion",
                        "SecurityAnswer",
                        "PasswordResetToken",
                        "PasswordResetExpiry",
                        "NewEmailAddress",
                        "NewEmailAddressToken",
                        "NewEmailAddressRequestExpiryDate"});
            table46.AddRow(new string[] {
                        "user3@test.net",
                        "Standard",
                        "User",
                        "x12a;pP02icdjshER",
                        "What is the name of your first pet?",
                        "Mr Miggins",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 310
 testRunner.Given("the following users are setup in the database:", ((string)(null)), table46, "Given ");
#line 313
 testRunner.And("I navigate to the website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 314
 testRunner.And("I click the login link in the navigation bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 315
 testRunner.And("I am navigated to the \'Login\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table47.AddRow(new string[] {
                        "UserName",
                        "user3@test.net"});
            table47.AddRow(new string[] {
                        "Password",
                        "x12a;pP02icdjshER"});
#line 316
 testRunner.And("I enter the following login data:", ((string)(null)), table47, "And ");
#line 320
 testRunner.And("I click the login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 321
 testRunner.And("I am navigated to the \'Landing\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 322
 testRunner.When("I select Admin -> Account Log from the menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 323
 testRunner.Then("I am navigated to the \'Account Log\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table48.AddRow(new string[] {
                        "User Logged On"});
#line 324
 testRunner.And("I am shown the following user logs:", ((string)(null)), table48, "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table49.AddRow(new string[] {
                        "User Logged On"});
#line 327
 testRunner.And("I have the following user logs in the system:", ((string)(null)), table49, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

